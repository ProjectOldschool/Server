// Generated by delombok at Sat Feb 25 09:19:03 PST 2017
package astraeus.game.event.impl;

import astraeus.game.event.Event;

public class MagicOnObjectEvent implements Event {
	private int spellId;
	private int objectId;
	private int objectX;
	private int objectY;
	
	public MagicOnObjectEvent(int spellId, int objectId, int objectX, int objectY) {
		this.spellId = spellId;
		this.objectId = objectId;
		this.objectX = objectX;
		this.objectY = objectY;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getSpellId() {
		return this.spellId;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getObjectId() {
		return this.objectId;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getObjectX() {
		return this.objectX;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int getObjectY() {
		return this.objectY;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setSpellId(final int spellId) {
		this.spellId = spellId;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setObjectId(final int objectId) {
		this.objectId = objectId;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setObjectX(final int objectX) {
		this.objectX = objectX;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public void setObjectY(final int objectY) {
		this.objectY = objectY;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof MagicOnObjectEvent)) return false;
		final MagicOnObjectEvent other = (MagicOnObjectEvent)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (this.getSpellId() != other.getSpellId()) return false;
		if (this.getObjectId() != other.getObjectId()) return false;
		if (this.getObjectX() != other.getObjectX()) return false;
		if (this.getObjectY() != other.getObjectY()) return false;
		return true;
	}
	
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof MagicOnObjectEvent;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + this.getSpellId();
		result = result * PRIME + this.getObjectId();
		result = result * PRIME + this.getObjectX();
		result = result * PRIME + this.getObjectY();
		return result;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public java.lang.String toString() {
		return "MagicOnObjectEvent(spellId=" + this.getSpellId() + ", objectId=" + this.getObjectId() + ", objectX=" + this.getObjectX() + ", objectY=" + this.getObjectY() + ")";
	}
}