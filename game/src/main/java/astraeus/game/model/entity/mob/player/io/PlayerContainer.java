// Generated by delombok at Sat Feb 25 09:19:09 PST 2017
package astraeus.game.model.entity.mob.player.io;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import astraeus.game.model.entity.item.Item;
import astraeus.game.model.entity.mob.player.Player;

/**
 * The class used to create an object and convert to json object.
 *
 * @author Seven
 */
public final class PlayerContainer {
  private static final transient Gson gson = new GsonBuilder().setPrettyPrinting().create();
  private final transient String username;
  private Item[] inventory;
  private Item[] equipment;
  private Item[] bank;
  
  public PlayerContainer(Player player) {
    inventory = player.getInventory().container();
    equipment = player.getEquipment().container();
    bank = player.getBank().container();
    this.username = player.getUsername();
  }
  
  public synchronized boolean save() throws IOException {
    final File dir = new File("./data/characters/containers/");
    if (!dir.exists()) {
      dir.mkdirs();
    }
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(dir.toString() + File.separator + username + ".json", false))) {
      writer.write(gson.toJson(this));
      return true;
    }
  }
  
  public static synchronized boolean load(Player player) throws Exception {
    final File file = new File("./data/characters/containers/" + player.getUsername() + ".json");
    if (!file.exists()) {
      return false;
    }
    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
      final PlayerContainer details = gson.fromJson(reader, PlayerContainer.class);
      if (details.getInventory() != null) {
        player.getInventory().setItems(details.getInventory());
      }
      if (details.getEquipment() != null) {
        player.getEquipment().setItems(details.getEquipment());
      }
      if (details.getBank() != null) {
        player.getBank().setItems(details.getBank());
      }
    }
    return true;
  }
  
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public String getUsername() {
    return this.username;
  }
  
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public Item[] getInventory() {
    return this.inventory;
  }
  
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public Item[] getEquipment() {
    return this.equipment;
  }
  
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public Item[] getBank() {
    return this.bank;
  }
  
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public void setInventory(final Item[] inventory) {
    this.inventory = inventory;
  }
  
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public void setEquipment(final Item[] equipment) {
    this.equipment = equipment;
  }
  
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public void setBank(final Item[] bank) {
    this.bank = bank;
  }
  
  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof PlayerContainer)) return false;
    final PlayerContainer other = (PlayerContainer)o;
    if (!java.util.Arrays.deepEquals(this.getInventory(), other.getInventory())) return false;
    if (!java.util.Arrays.deepEquals(this.getEquipment(), other.getEquipment())) return false;
    if (!java.util.Arrays.deepEquals(this.getBank(), other.getBank())) return false;
    return true;
  }
  
  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + java.util.Arrays.deepHashCode(this.getInventory());
    result = result * PRIME + java.util.Arrays.deepHashCode(this.getEquipment());
    result = result * PRIME + java.util.Arrays.deepHashCode(this.getBank());
    return result;
  }
  
  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  @javax.annotation.Generated("lombok")
  public java.lang.String toString() {
    return "PlayerContainer(username=" + this.getUsername() + ", inventory=" + java.util.Arrays.deepToString(this.getInventory()) + ", equipment=" + java.util.Arrays.deepToString(this.getEquipment()) + ", bank=" + java.util.Arrays.deepToString(this.getBank()) + ")";
  }
}